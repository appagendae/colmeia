name: 'Deploy to AWS ECR and EC2'

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build-and-push-to-ecr:
    name: 'Build and Push to ECR'
    runs-on: ubuntu-latest
    env:
      AWS_REGION: 'us-east-2'
      ECR_REPOSITORY: 'colmeia' # Ajuste para cada servi√ßo
    outputs:
      image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}

    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4

      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 'Login to Amazon ECR'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: 'Build, tag, and push image to Amazon ECR'
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy-to-ec2:
    name: 'Deploy to EC2 Instance'
    runs-on: ubuntu-latest
    needs: build-and-push-to-ecr

    steps:
      - name: 'Deploy to EC2'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            
            aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin ${{ needs.build-and-push-to-ecr.outputs.image }}
            
            docker stop colmeia || true
            docker rm colmeia || true
            
            docker pull ${{ needs.build-and-push-to-ecr.outputs.image }}
            
            docker run -d \
              --name colmeia \
              --network agendae-network \
              --restart always \
              -p 127.0.0.1:8080:8080 \
              -v /etc/colmeia/secrets/credentials.json:/app/config/credentials.json:ro \            
              -e SPRING_DATASOURCE_URL=jdbc:postgresql://colmeia_pdb:5432/colmeia_db \
              -e SPRING_DATASOURCE_USERNAME=colmeia_user \
              -e SPRING_DATASOURCE_PASSWORD=colmeia_pass \
              ${{ needs.build-and-push-to-ecr.outputs.image }}
            
            docker image prune -af